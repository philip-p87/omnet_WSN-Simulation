#last changed on 15.03.18
#Note: this code requires Omnet v4.6 to run
[General]
network = Aloha
rng-class="cLCG32"   # default is "cMersenneTwister"
num-rngs=100

#changelog: 
#21.08 allow to switch between simple and full carrier sensing (for performance reasons)
#23.08 counting sequenceLoss, etc. changed for bidirectional modes
#28.08 repaired receiver-initiated mode & packet counting
#      implemented proper rx_time and tx_time measuring
#      repaired mode 5,7,9,10 - all of them are now working
#07.09 rx_time and tx_time now also contain data of non-successful sequences
#	   added sleep times
#10.10 repaired mode 1, 2, 3 (there might be some minor issues)
#08.02.2018 updated mode 11 (TDMA with ACK)
#08.02 removed bug in ExternalInterference
#16.02 implemented submode == 1 for mode 7 and 10
#16.02 disabled submode when ext int or ck modes are active
#18.02 added submode 4-6
#26.02 TDMA (mode == 11) automatic guard time interval calculation


Aloha.server.vectorOutput = "C:/Users/Philip/Uni/papers/vector.csv"   #will save a csv-vector file to this location

Aloha.txRate = 2000kbps 
Aloha.pkLenBits = 176b						# data length in bits (with overhead, etc.)
Aloha.RX_TX_switching_time = 130us			# [µs] switching time Tx <-> Rx required by the transceiver
Aloha.processing_delay = 0us				# processing delay after data reception (ack/packet/carrier sensing)
Aloha.ACKLenBits = 112b						# length of ACK in bits
Aloha.cs_sensitivity = 10us         		# receiver sensitivity: minimum time a signal must be present for the receiver to detect it (carrier sense time = 2*sensitivity + RX_TX_switching_time)


Aloha.haltOnPacketNumberSent = 10000			# number of sequences to be received before next iteration begins or simulation ends 
Aloha.haltOnDeadlines 		 = 1000			# number of deadlines that pass before next iteration is started; -1= use haltOnPacketNumberSent instead; (mode == 11 only)
Aloha.max_iteration_number = 1				# number of random transmissions before restart (every restart runs for "haltOnPacketNumberSent") TODO erzeugt fehler (bemerkbar bei mode 7 und 1 paket)
Aloha.minHosts = 75	 						# -1 for same value as maxHosts
Aloha.maxHosts = 75
Aloha.HostStepSize = 5
Aloha.minPackets = 3						# -1 if sending n packets (or 2n-1 in case of mode 4): MUST be -1 for mode 4
Aloha.maxPackets = 3
Aloha.deadline = 500						# in ms; time in which packets must be received by server to be counted as valid (used by mode 7,10,11)	(mode 5 has its own deadline)		


Aloha.mode = 5 							    # 1 SIES
											# 2 Schweden
											# 3 Journal Alg: SIES mit unterschiedlichen Deadlines und Paketlängen. Perioden aus Alg
											# 4 reliable CSMA: bidirectional, ACK, carrier-sense, 100% reliable  (DSD16)
											# 5 CSMA/CA: carrier sense multiple access, non persistent as per 802.15.4 (TODO: error in non receiver-initiated mode)
											# 6 wie mode 4, nur verbesserte perioden, die mit alg gefunden wurden OBSOLETE (not working at the moment)
											# 7 RTNS: random periods, k packets (maxPackets)
											# 8 TDMA without ACK: Aus Paper 4 (reliable CSMA) (needs to be updated to work similarly to )
											# 11 TDMA with ACK (new for RTNS Journal 07.08.17)
											# 9 RTNS mit ACK (for RTNS Journal) does not support different node types or any submodes (new for RTNS journal Feb 17)
											# 10 RTCSA: RTNS with carrier sensing and ACK (new 24.04.17)

Aloha.submode = 0							# 0 nothing (default)
											# 1 for mode 1-3,7,10: gradually change packet numbers from minPackets to maxPackets (disabled for ck and ext int modes)
											# 2 for RTNS (mode 7): OBSOLETE!!, REMOVE: receiver initiated setup (no random intersequence pause)
											# 3 for mode == 3: use same intersequence pause as for mode == 1
											# 4 increase RX_TX_switching_time gradually
											# 5 increase deadline gradually
											# 6 increase packet size


Aloha.receiverInitiated = true				# trigger all nodes periodically at the same time, similar to the receiver-initiated paradigm -> good for analyzing WC behavior

Aloha.carrierSenseMode = 2					# 1 high accuracy: carrier sensing uses a publish-subscriber system
											# 2 high performance: senses only at the beginning and end of cs interval (very short transmissions might not be detected)

#for submodes
Aloha.submode_steps = 20					#number of iteration steps of submodes, e.g., how many steps are inbetween min and max value (must be <=100)
Aloha.deadline_start = 100					# in ms; submode == 5
Aloha.deadline_stop = 1000
Aloha.RX_TX_switching_time_start = 0		# in µs; submode == 4
Aloha.RX_TX_switching_time_stop = 400
Aloha.packet_length_start = 96				# in bits; submode == 6
Aloha.packet_length_stop = 10000


# Clock drift
Aloha.ClockDriftEnabled = false			    # Enable random clock drift: Drift stays constant over a sequence, but is shuffled before every sequence
Aloha.ClockDriftRangePercent = 10			# Maximum Clock drift in percent: 5% for example means, we have up to 0.05s drift per second (range 0 - 100)
Aloha.ClockDriftPlotMode = true				# Will iterate clock drift from 0 to ClockDriftRangePercent and record lost sequences etc.
Aloha.ClockDriftPlotStepNumber = 100 		# Number of iterations in plotMode, must be < 100

# External Interference
Aloha.ExternalInterferenceEnable = false		# Enable the simulation of external interference (NOTE: CLockdrift Plot and this mode are exclusive)
Aloha.ExternalInterferenceDutyCycle = 100	# in percent
Aloha.ExternalInterferencePlotMode = true  	# Will iterate from duty cycle of external interference from 0 to ExternalInterferenceDutyCycle and plot results
Aloha.ExternalInterferencePlotStepNumber = 20 # Number of plot "points": plotMode will iterate this many times, must be <= 100
Aloha.ExternalInterferenceActiveMin = 12	# Minimum Interference Pulse length in bytes (-1 for custom values in Server.cc)
Aloha.ExternalInterferenceActiveMax = 72	# Maximum Interference Pulse length in bytes 



#CSMA mode settings
Aloha.CSMA_deadline = 500 					# in ms; 0: disable; time after which a CSMA packet is counted as invalid
Aloha.CSMA_mode = 0							# UNUSED (assumes 802.15.4) # 1 classic ethernet (cable)  # 2 802.11
Aloha.CSMA_backoff_time = 320us				# -1: complete packet: ldata + lack + 3tset + tsense; -2 minimum listening time 2*tsense (=4*tbar + 2*tset)
Aloha.CSMA_max_retransmissions = 3          # max retransmission retries
Aloha.CSMA_max_backoffs	= 4					# max backoff retries before abort
Aloha.CSMA_wc_min = 32
Aloha.CSMA_wc_max = 1024					# maximum number of retransmissions is set via CSMA_max_retransmissions -> this value might not be reached for small CSMA_max_retransmissions
Aloha.CSMA_DIFS	= 50						# (unused) when channel was busy during CS, this time (µs) is waited to resume backoff counting (int his time, the channel must be free)

#TDMA mode settings
Aloha.TDMA_beacon_size = -1					# bits; -1 = use packet size
Aloha.TDMA_beacon_rate = 1					# (mode 8 only) one beacon every x seconds
Aloha.TDMA_slot_tolerance = 10				# (mode 8 only) in percent;
Aloha.TDMA_slot_duration = -1				# (mode 8 only) in milliseconds (not done yet) ; -1=use packet size + tolerance; -2=use packet size+ACK+2*switch+tolerance
Aloha.TDMA_guard_time = -1#700					# (mode 11) in microseconds; -1 = maximum possible value
Aloha.TDMA_cycles_per_deadline = 3			# (mode 11) number of cycles that are within deadline (set 0 to deactivate) Attention: guard times, etc. must be set manually to not violate deadline boundaries
Aloha.TDMA_beacon_reception_rate = 7		# (mode 11) in seconds; receive beacon every x seconds and sync, all other beacons will be not heared (ignored)
Aloha.TDMA_default_clock_drift = 100		# (mode 11) in ppm; default clock drift of TDMA


#RTNS mode 7 settings
Aloha.RTNS_reliability = 0.95				# transmission reliability in %
Aloha.RTNS_reliability_max = true			# calculates max possible reliability instead of using a fixed one (only working for same node type so far)
Aloha.RTNS_m = 1
Aloha.RTNS_use_different_node_types = false # use setting with two different node types NOT FULLY IMPLEMENTED YET
Aloha.RTNS_deadline2 = 1.000				# second deadline, if setting with two different node types is used
Aloha.RTNS_packet_length2 = 24b				# second packet length, if setting with two different node types is used (packet length 1 is pkLenBits as defined previously)
Aloha.RTNS_node_type_ratio = 0.50			# ratio of nodes type 1 and 2 in percent of node 1 (e.g. 0.5 means 50% type 1)


#custom settings
#if mode4 sense-ack-reliable is used, these values will be overwritten
Aloha.listen_time = -1		#unused		#todo	# time in ms after a packet in which the Host will be able to receive ACKs. -1: packet time




Aloha.WC_MODE = false						# WC_MODE: true = Würfelverfahren alle haltOnPaketNumberSent; 
											#		   false: nach jeder Sequenz zufällige Pause ohne jedes mal Anfangsposition neu auszuwürfeln
											# 		   		  only valid for mode 2 or 4
Aloha.PAUSE	= true							#pause after a sequence (for paper alg and enemy paper)

#todo remove and then check waiting times after sequences
Aloha.LONG_PAUSE = true						#true: when ACK is received, node will wait as long as it would when all (n) packets were sent ONLY FOR BIDIRECTIONAL MODES
											#false: after ACK, host will shortly start to transmit new sequence (-> high network load)
Aloha.shortPeriod = false 					#for paper alg: use shortened periods (when sending less than n packets) UNUSED in this version



